description:
deploy an NGINX instance that will be publicly accessible and display the text "yo this is nginx" upon
access. Achieving this objective involves leveraging Terraform, Docker, and deployment using AWS resources.

pre-requirements:
AWS account - free tier enough for this project :)
AWS CLI installed
Terraform installed
Docker installed on the machine (you local and the vm on the cloud) 

Steps:

## configure:
1. Install AWS CLI 
2. Install terraform
3. Create a user in AWS console for the assignment (AWS IAM)
4. Configure AWS CLI with the credentials of the user that has been created.
Pay attention for security reasons the configurations done with AWS CLI and not as a test in the terraform files.
5. Installing Docker on you machine (fo testing the docker image)

##AWS Infrastructure Setup:
1. Virtual Private Cloud (VPC) featuring public and private subnets - handles in terraform files.
2. An EC2 instance in the private subnet for deploying the dockerized NGINX - handles in terraform files.
3. Security groups and necessary configurations for seamless communication - handles in terraform files.
4. Any additional resources required for subsequent steps : I added NAT instance adn EIP for the NAT instance - handles in terraform files.
5. Make sure you have security in mind when designing the architecture - handles in terraform files.

## Docker Containerization:
1. I made a Dockerfile
2. I build using docker build -t almogmaman762/custom-nginx .
3. Run the nginx custom container on my local machine for testing. 
4. login to my docker hub account via docker login command (insert the right credentials)
5. push my customize nginx image to my docker hub account.


Security:
handle very strick access to recourses. multiple layers of security.
in the vpc, subnets, nat instance, nginx instance.
all the architecture design from security perspective. take a look at the terraform files.
For example. the nginx instance can interact only with the nat instance.
the security groups and the ACL's limits the inbound and outbound traffic to certain port and protocol
and when its necessary to certain ip's.